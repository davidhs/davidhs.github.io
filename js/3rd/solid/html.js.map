{"mappings":"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","names":["effect","style","insert","untrack","spread","createComponent","delegateEvents","classList","mergeProps","dynamicProperty","setAttribute","setAttributeNS","addEventListener","Aliases","getPropAlias","Properties","ChildProperties","DelegatedEvents","SVGElements","SVGNamespace","tagRE","attrRE","lookup","parseTag","tag","res","tagMatch","endIndex","reg","match","pushTextNode","list","html","start","end","content","pushCommentNode","parse","result","current","level","arr","byTag","index","isOpen","isComment","nextChar","parent","attrString","attrs","buff","attr","stringifier","doc","stringify","token","rootEl","cache","VOID_ELEMENTS","spaces","almostEverything","attrName","tagName","attrPartials","attrSeeker","findAttributes","selfClosing","marker","reservedNameSpaces","attrReplacer","$0","$1","$2","$3","replaceAttributes","fullClosing","toPropertyName","name","_","w","parseDirective","value","options","count","createHTML","r","functionBuilder","args","uuid","props","d","k","createTemplate","statics","opt","i","markup","acc","x","pars","code","parseTemplate","templates","nomarkers","j","parts","memo","p","parseKeyValue","node","isSVG","isCE","expr","v","namespace","isChildProp","isProp","prev","ns","parseAttribute","capture","lc","delegate","childOptions","check","processChildren","child","processComponent","parseNode","processComponentProps","propGroups","keys","componentIdentifier","type","topDecl","children","id","templateId","e","spreadArgs","newAttrs","nodes","funcBuilder","origNodes","toplevel","t"],"sourceRoot":"/","sources":["../esmd/npm/solid-js@1.8.1/node_modules/.pnpm/solid-js@1.8.1/node_modules/solid-js/html/dist/html.js"],"sourcesContent":["import {\n  effect,\n  style,\n  insert,\n  untrack,\n  spread,\n  createComponent,\n  delegateEvents,\n  classList,\n  mergeProps,\n  dynamicProperty,\n  setAttribute,\n  setAttributeNS,\n  addEventListener,\n  Aliases,\n  getPropAlias,\n  Properties,\n  ChildProperties,\n  DelegatedEvents,\n  SVGElements,\n  SVGNamespace\n} from \"solid-js/web\";\n\nconst tagRE = /(?:\u003c!--[\\S\\s]*?--\u003e|\u003c(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\"\u003e])+\u003e)/g;\nconst attrRE =\n  /(?:\\s(?\u003cboolean\u003e[^/\\s\u003e\u003c=]+?)(?=[\\s/\u003e]))|(?:(?\u003cname\u003e\\S+?)(?:\\s*=\\s*(?:(['\"])(?\u003cquotedValue\u003e[\\s\\S]*?)\\3|(?\u003cunquotedValue\u003e[^\\s\u003e]+))))/g;\nconst lookup = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  menuitem: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\nfunction parseTag(tag) {\n  const res = {\n    type: \"tag\",\n    name: \"\",\n    voidElement: false,\n    attrs: [],\n    children: []\n  };\n  const tagMatch = tag.match(/\u003c\\/?([^\\s]+?)[/\\s\u003e]/);\n  if (tagMatch) {\n    res.name = tagMatch[1];\n    if (lookup[tagMatch[1].toLowerCase()] || tag.charAt(tag.length - 2) === \"/\") {\n      res.voidElement = true;\n    }\n    if (res.name.startsWith(\"!--\")) {\n      const endIndex = tag.indexOf(\"--\u003e\");\n      return {\n        type: \"comment\",\n        comment: endIndex !== -1 ? tag.slice(4, endIndex) : \"\"\n      };\n    }\n  }\n  const reg = new RegExp(attrRE);\n  for (const match of tag.matchAll(reg)) {\n    if ((match[1] || match[2]).startsWith(\"use:\")) {\n      res.attrs.push({\n        type: \"directive\",\n        name: match[1] || match[2],\n        value: match[4] || match[5] || \"\"\n      });\n    } else {\n      res.attrs.push({\n        type: \"attr\",\n        name: match[1] || match[2],\n        value: match[4] || match[5] || \"\"\n      });\n    }\n  }\n  return res;\n}\nfunction pushTextNode(list, html, start) {\n  const end = html.indexOf(\"\u003c\", start);\n  const content = html.slice(start, end === -1 ? void 0 : end);\n  if (!/^\\s*$/.test(content)) {\n    list.push({\n      type: \"text\",\n      content: content\n    });\n  }\n}\nfunction pushCommentNode(list, tag) {\n  const content = tag.replace(\"\u003c!--\", \"\").replace(\"--\u003e\", \"\");\n  if (!/^\\s*$/.test(content)) {\n    list.push({\n      type: \"comment\",\n      content: content\n    });\n  }\n}\nfunction parse(html) {\n  const result = [];\n  let current = void 0;\n  let level = -1;\n  const arr = [];\n  const byTag = {};\n  html.replace(tagRE, (tag, index) =\u003e {\n    const isOpen = tag.charAt(1) !== \"/\";\n    const isComment = tag.slice(0, 4) === \"\u003c!--\";\n    const start = index + tag.length;\n    const nextChar = html.charAt(start);\n    let parent = void 0;\n    if (isOpen \u0026\u0026 !isComment) {\n      level++;\n      current = parseTag(tag);\n      if (!current.voidElement \u0026\u0026 nextChar \u0026\u0026 nextChar !== \"\u003c\") {\n        pushTextNode(current.children, html, start);\n      }\n      byTag[current.tagName] = current;\n      if (level === 0) {\n        result.push(current);\n      }\n      parent = arr[level - 1];\n      if (parent) {\n        parent.children.push(current);\n      }\n      arr[level] = current;\n    }\n    if (isComment) {\n      if (level \u003c 0) {\n        pushCommentNode(result, tag);\n      } else {\n        pushCommentNode(arr[level].children, tag);\n      }\n    }\n    if (isComment || !isOpen || current.voidElement) {\n      if (!isComment) {\n        level--;\n      }\n      if (nextChar !== \"\u003c\" \u0026\u0026 nextChar) {\n        parent = level === -1 ? result : arr[level].children;\n        pushTextNode(parent, html, start);\n      }\n    }\n  });\n  return result;\n}\nfunction attrString(attrs) {\n  const buff = [];\n  for (const attr of attrs) {\n    buff.push(attr.name + '=\"' + attr.value.replace(/\"/g, \"\u0026quot;\") + '\"');\n  }\n  if (!buff.length) {\n    return \"\";\n  }\n  return \" \" + buff.join(\" \");\n}\nfunction stringifier(buff, doc) {\n  switch (doc.type) {\n    case \"text\":\n      return buff + doc.content;\n    case \"tag\":\n      buff +=\n        \"\u003c\" + doc.name + (doc.attrs ? attrString(doc.attrs) : \"\") + (doc.voidElement ? \"/\u003e\" : \"\u003e\");\n      if (doc.voidElement) {\n        return buff;\n      }\n      return buff + doc.children.reduce(stringifier, \"\") + \"\u003c/\" + doc.name + \"\u003e\";\n    case \"comment\":\n      return (buff += \"\u003c!--\" + doc.content + \"--\u003e\");\n  }\n}\nfunction stringify(doc) {\n  return doc.reduce(function (token, rootEl) {\n    return token + stringifier(\"\", rootEl);\n  }, \"\");\n}\nconst cache = new Map();\nconst VOID_ELEMENTS =\n  /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst spaces = \" \\\\f\\\\n\\\\r\\\\t\";\nconst almostEverything = \"[^\" + spaces + \"\\\\/\u003e\\\"'=]+\";\nconst attrName = \"[ \" + spaces + \"]+(?:use:\u003c!--#--\u003e|\" + almostEverything + \")\";\nconst tagName = \"\u003c([A-Za-z$#]+[A-Za-z0-9:_-]*)((?:\";\nconst attrPartials =\n  \"(?:\\\\s*=\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\([^)]*?\\\\)|\u003c[^\u003e]*?\u003e|\" + almostEverything + \"))?)\";\nconst attrSeeker = new RegExp(tagName + attrName + attrPartials + \"+)([ \" + spaces + \"]*/?\u003e)\", \"g\");\nconst findAttributes = new RegExp(\n  \"(\" + attrName + \"\\\\s*=\\\\s*)(\u003c!--#--\u003e|['\\\"(]([\\\\w\\\\s]*\u003c!--#--\u003e[\\\\w\\\\s]*)*['\\\")])\",\n  \"gi\"\n);\nconst selfClosing = new RegExp(tagName + attrName + attrPartials + \"*)([ \" + spaces + \"]*/\u003e)\", \"g\");\nconst marker = \"\u003c!--#--\u003e\";\nconst reservedNameSpaces = new Set([\"class\", \"on\", \"oncapture\", \"style\", \"use\", \"prop\", \"attr\"]);\nfunction attrReplacer($0, $1, $2, $3) {\n  return \"\u003c\" + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\n}\nfunction replaceAttributes($0, $1, $2) {\n  return (\n    $1.replace(/\u003c!--#--\u003e/g, \"###\") +\n    ($2[0] === '\"' || $2[0] === \"'\" ? $2.replace(/\u003c!--#--\u003e/g, \"###\") : '\"###\"')\n  );\n}\nfunction fullClosing($0, $1, $2) {\n  return VOID_ELEMENTS.test($1) ? $0 : \"\u003c\" + $1 + $2 + \"\u003e\u003c/\" + $1 + \"\u003e\";\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) =\u003e w.toUpperCase());\n}\nfunction parseDirective(name, value, tag, options) {\n  if (name === \"use:###\" \u0026\u0026 value === \"###\") {\n    const count = options.counter++;\n    options.exprs.push(\n      `typeof exprs[${count}] === \"function\" ? r.use(exprs[${count}], ${tag}, exprs[${options.counter++}]) : (()=\u003e{throw new Error(\"use:### must be a function\")})()`\n    );\n  } else {\n    throw new Error(`Not support syntax ${name} must be use:{function}`);\n  }\n}\nfunction createHTML(\n  r,\n  { delegateEvents = true, functionBuilder = (...args) =\u003e new Function(...args) } = {}\n) {\n  let uuid = 1;\n  r.wrapProps = props =\u003e {\n    const d = Object.getOwnPropertyDescriptors(props);\n    for (const k in d) {\n      if (typeof d[k].value === \"function\" \u0026\u0026 !d[k].value.length) r.dynamicProperty(props, k);\n    }\n    return props;\n  };\n  function createTemplate(statics, opt) {\n    let i = 0,\n      markup = \"\";\n    for (; i \u003c statics.length - 1; i++) {\n      markup = markup + statics[i] + \"\u003c!--#--\u003e\";\n    }\n    markup = markup + statics[i];\n    const replaceList = [\n      [selfClosing, fullClosing],\n      [/\u003c(\u003c!--#--\u003e)/g, \"\u003c###\"],\n      [/\\.\\.\\.(\u003c!--#--\u003e)/g, \"###\"],\n      [attrSeeker, attrReplacer],\n      [/\u003e\\n+\\s*/g, \"\u003e\"],\n      [/\\n+\\s*\u003c/g, \"\u003c\"],\n      [/\\s+\u003c/g, \" \u003c\"],\n      [/\u003e\\s+/g, \"\u003e \"]\n    ];\n    markup = replaceList.reduce((acc, x) =\u003e {\n      return acc.replace(x[0], x[1]);\n    }, markup);\n    const pars = parse(markup);\n    const [html, code] = parseTemplate(pars, opt.funcBuilder),\n      templates = [];\n    for (let i = 0; i \u003c html.length; i++) {\n      templates.push(document.createElement(\"template\"));\n      templates[i].innerHTML = html[i];\n      const nomarkers = templates[i].content.querySelectorAll(\"script,style\");\n      for (let j = 0; j \u003c nomarkers.length; j++) {\n        const d = nomarkers[j].firstChild?.data || \"\";\n        if (d.indexOf(marker) \u003e -1) {\n          const parts = d.split(marker).reduce((memo, p, i) =\u003e {\n            i \u0026\u0026 memo.push(\"\");\n            memo.push(p);\n            return memo;\n          }, []);\n          nomarkers[i].firstChild.replaceWith(...parts);\n        }\n      }\n    }\n    templates[0].create = code;\n    cache.set(statics, templates);\n    return templates;\n  }\n  function parseKeyValue(node, tag, name, value, isSVG, isCE, options) {\n    let expr =\n        value === \"###\"\n          ? `!doNotWrap ? exprs[${options.counter}]() : exprs[${options.counter++}]`\n          : value\n              .split(\"###\")\n              .map((v, i) =\u003e\n                i\n                  ? ` + (typeof exprs[${options.counter}] === \"function\" ? exprs[${\n                      options.counter\n                    }]() : exprs[${options.counter++}]) + \"${v}\"`\n                  : `\"${v}\"`\n              )\n              .join(\"\"),\n      parts,\n      namespace;\n    if ((parts = name.split(\":\")) \u0026\u0026 parts[1] \u0026\u0026 reservedNameSpaces.has(parts[0])) {\n      name = parts[1];\n      namespace = parts[0];\n    }\n    const isChildProp = r.ChildProperties.has(name);\n    const isProp = r.Properties.has(name);\n    if (name === \"style\") {\n      const prev = `_$v${uuid++}`;\n      options.decl.push(`${prev}={}`);\n      options.exprs.push(`r.style(${tag},${expr},${prev})`);\n    } else if (name === \"classList\") {\n      const prev = `_$v${uuid++}`;\n      options.decl.push(`${prev}={}`);\n      options.exprs.push(`r.classList(${tag},${expr},${prev})`);\n    } else if (\n      namespace !== \"attr\" \u0026\u0026\n      (isChildProp ||\n        (!isSVG \u0026\u0026 (r.getPropAlias(name, node.name.toUpperCase()) || isProp)) ||\n        isCE ||\n        namespace === \"prop\")\n    ) {\n      if (isCE \u0026\u0026 !isChildProp \u0026\u0026 !isProp \u0026\u0026 namespace !== \"prop\") name = toPropertyName(name);\n      options.exprs.push(\n        `${tag}.${r.getPropAlias(name, node.name.toUpperCase()) || name} = ${expr}`\n      );\n    } else {\n      const ns = isSVG \u0026\u0026 name.indexOf(\":\") \u003e -1 \u0026\u0026 r.SVGNamespace[name.split(\":\")[0]];\n      if (ns) options.exprs.push(`r.setAttributeNS(${tag},\"${ns}\",\"${name}\",${expr})`);\n      else options.exprs.push(`r.setAttribute(${tag},\"${r.Aliases[name] || name}\",${expr})`);\n    }\n  }\n  function parseAttribute(node, tag, name, value, isSVG, isCE, options) {\n    if (name.slice(0, 2) === \"on\") {\n      if (!name.includes(\":\")) {\n        const lc = name.slice(2).toLowerCase();\n        const delegate = delegateEvents \u0026\u0026 r.DelegatedEvents.has(lc);\n        options.exprs.push(\n          `r.addEventListener(${tag},\"${lc}\",exprs[${options.counter++}],${delegate})`\n        );\n        delegate \u0026\u0026 options.delegatedEvents.add(lc);\n      } else {\n        let capture = name.startsWith(\"oncapture:\");\n        options.exprs.push(\n          `${tag}.addEventListener(\"${name.slice(capture ? 10 : 3)}\",exprs[${options.counter++}]${\n            capture ? \",true\" : \"\"\n          })`\n        );\n      }\n    } else if (name === \"ref\") {\n      options.exprs.push(`exprs[${options.counter++}](${tag})`);\n    } else {\n      const childOptions = Object.assign({}, options, {\n          exprs: []\n        }),\n        count = options.counter;\n      parseKeyValue(node, tag, name, value, isSVG, isCE, childOptions);\n      options.decl.push(\n        `_fn${count} = (${value === \"###\" ? \"doNotWrap\" : \"\"}) =\u003e {\\n${childOptions.exprs.join(\n          \";\\n\"\n        )};\\n}`\n      );\n      if (value === \"###\") {\n        options.exprs.push(\n          `typeof exprs[${count}] === \"function\" ? r.effect(_fn${count}) : _fn${count}(true)`\n        );\n      } else {\n        let check = \"\";\n        for (let i = count; i \u003c childOptions.counter; i++) {\n          i !== count \u0026\u0026 (check += \" || \");\n          check += `typeof exprs[${i}] === \"function\"`;\n        }\n        options.exprs.push(check + ` ? r.effect(_fn${count}) : _fn${count}()`);\n      }\n      options.counter = childOptions.counter;\n      options.wrap = false;\n    }\n  }\n  function processChildren(node, options) {\n    const childOptions = Object.assign({}, options, {\n      first: true,\n      multi: false,\n      parent: options.path\n    });\n    if (node.children.length \u003e 1) {\n      for (let i = 0; i \u003c node.children.length; i++) {\n        const child = node.children[i];\n        if (\n          (child.type === \"comment\" \u0026\u0026 child.content === \"#\") ||\n          (child.type === \"tag\" \u0026\u0026 child.name === \"###\")\n        ) {\n          childOptions.multi = true;\n          break;\n        }\n      }\n    }\n    let i = 0;\n    while (i \u003c node.children.length) {\n      const child = node.children[i];\n      if (child.name === \"###\") {\n        if (childOptions.multi) {\n          node.children[i] = {\n            type: \"comment\",\n            content: \"#\"\n          };\n          i++;\n        } else node.children.splice(i, 1);\n        processComponent(child, childOptions);\n        continue;\n      }\n      parseNode(child, childOptions);\n      if (!childOptions.multi \u0026\u0026 child.type === \"comment\" \u0026\u0026 child.content === \"#\")\n        node.children.splice(i, 1);\n      else i++;\n    }\n    options.counter = childOptions.counter;\n    options.templateId = childOptions.templateId;\n    options.hasCustomElement = options.hasCustomElement || childOptions.hasCustomElement;\n  }\n  function processComponentProps(propGroups) {\n    let result = [];\n    for (const props of propGroups) {\n      if (Array.isArray(props)) {\n        if (!props.length) continue;\n        result.push(`r.wrapProps({${props.join(\",\") || \"\"}})`);\n      } else result.push(props);\n    }\n    return result.length \u003e 1 ? `r.mergeProps(${result.join(\",\")})` : result[0];\n  }\n  function processComponent(node, options) {\n    let props = [];\n    const keys = Object.keys(node.attrs),\n      propGroups = [props],\n      componentIdentifier = options.counter++;\n    for (let i = 0; i \u003c keys.length; i++) {\n      const { type, name, value } = node.attrs[i];\n      if (type === \"attr\") {\n        if (name === \"###\") {\n          propGroups.push(`exprs[${options.counter++}]`);\n          propGroups.push((props = []));\n        } else if (value === \"###\") {\n          props.push(`${name}: exprs[${options.counter++}]`);\n        } else props.push(`${name}: \"${value}\"`);\n      } else if (type === \"directive\") {\n        const tag = `_$el${uuid++}`;\n        const topDecl = !options.decl.length;\n        options.decl.push(\n          topDecl ? \"\" : `${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`\n        );\n        parseDirective(name, value, tag, options);\n      }\n    }\n    if (\n      node.children.length === 1 \u0026\u0026\n      node.children[0].type === \"comment\" \u0026\u0026\n      node.children[0].content === \"#\"\n    ) {\n      props.push(`children: () =\u003e exprs[${options.counter++}]`);\n    } else if (node.children.length) {\n      const children = {\n          type: \"fragment\",\n          children: node.children\n        },\n        childOptions = Object.assign({}, options, {\n          first: true,\n          decl: [],\n          exprs: [],\n          parent: false\n        });\n      parseNode(children, childOptions);\n      props.push(`children: () =\u003e { ${childOptions.exprs.join(\";\\n\")}}`);\n      options.templateId = childOptions.templateId;\n      options.counter = childOptions.counter;\n    }\n    let tag;\n    if (options.multi) {\n      tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n    }\n    if (options.parent)\n      options.exprs.push(\n        `r.insert(${\n          options.parent\n        }, r.createComponent(exprs[${componentIdentifier}],${processComponentProps(propGroups)})${\n          tag ? `, ${tag}` : \"\"\n        })`\n      );\n    else\n      options.exprs.push(\n        `${\n          options.fragment ? \"\" : \"return \"\n        }r.createComponent(exprs[${componentIdentifier}],${processComponentProps(propGroups)})`\n      );\n    options.path = tag;\n    options.first = false;\n  }\n  function parseNode(node, options) {\n    if (node.type === \"fragment\") {\n      const parts = [];\n      node.children.forEach(child =\u003e {\n        if (child.type === \"tag\") {\n          if (child.name === \"###\") {\n            const childOptions = Object.assign({}, options, {\n              first: true,\n              fragment: true,\n              decl: [],\n              exprs: []\n            });\n            processComponent(child, childOptions);\n            parts.push(childOptions.exprs[0]);\n            options.counter = childOptions.counter;\n            options.templateId = childOptions.templateId;\n            return;\n          }\n          options.templateId++;\n          const id = uuid;\n          const childOptions = Object.assign({}, options, {\n            first: true,\n            decl: [],\n            exprs: []\n          });\n          options.templateNodes.push([child]);\n          parseNode(child, childOptions);\n          parts.push(\n            `function() { ${\n              childOptions.decl.join(\",\\n\") +\n              \";\\n\" +\n              childOptions.exprs.join(\";\\n\") +\n              `;\\nreturn _$el${id};\\n`\n            }}()`\n          );\n          options.counter = childOptions.counter;\n          options.templateId = childOptions.templateId;\n        } else if (child.type === \"text\") {\n          parts.push(`\"${child.content}\"`);\n        } else if (child.type === \"comment\") {\n          if (child.content === \"#\") parts.push(`exprs[${options.counter++}]`);\n          else if (child.content) {\n            for (let i = 0; i \u003c child.content.split(\"###\").length - 1; i++) {\n              parts.push(`exprs[${options.counter++}]`);\n            }\n          }\n        }\n      });\n      options.exprs.push(`return [${parts.join(\", \\n\")}]`);\n    } else if (node.type === \"tag\") {\n      const tag = `_$el${uuid++}`;\n      const topDecl = !options.decl.length;\n      const templateId = options.templateId;\n      options.decl.push(\n        topDecl ? \"\" : `${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`\n      );\n      const isSVG = r.SVGElements.has(node.name);\n      const isCE = node.name.includes(\"-\");\n      options.hasCustomElement = isCE;\n      if (node.attrs.some(e =\u003e e.name === \"###\")) {\n        const spreadArgs = [];\n        let current = \"\";\n        const newAttrs = [];\n        for (let i = 0; i \u003c node.attrs.length; i++) {\n          const { type, name, value } = node.attrs[i];\n          if (type === \"attr\") {\n            if (value.includes(\"###\")) {\n              let count = options.counter++;\n              current += `${name}: ${\n                name !== \"ref\" ? `typeof exprs[${count}] === \"function\" ? exprs[${count}]() : ` : \"\"\n              }exprs[${count}],`;\n            } else if (name === \"###\") {\n              if (current.length) {\n                spreadArgs.push(`()=\u003e({${current}})`);\n                current = \"\";\n              }\n              spreadArgs.push(`exprs[${options.counter++}]`);\n            } else {\n              newAttrs.push(node.attrs[i]);\n            }\n          } else if (type === \"directive\") {\n            parseDirective(name, value, tag, options);\n          }\n        }\n        node.attrs = newAttrs;\n        if (current.length) {\n          spreadArgs.push(`()=\u003e({${current}})`);\n        }\n        options.exprs.push(\n          `r.spread(${tag},${\n            spreadArgs.length === 1\n              ? `typeof ${spreadArgs[0]} === \"function\" ? r.mergeProps(${spreadArgs[0]}) : ${spreadArgs[0]}`\n              : `r.mergeProps(${spreadArgs.join(\",\")})`\n          },${isSVG},${!!node.children.length})`\n        );\n      } else {\n        for (let i = 0; i \u003c node.attrs.length; i++) {\n          const { type, name, value } = node.attrs[i];\n          if (type === \"directive\") {\n            parseDirective(name, value, tag, options);\n            node.attrs.splice(i, 1);\n            i--;\n          } else if (type === \"attr\") {\n            if (value.includes(\"###\")) {\n              node.attrs.splice(i, 1);\n              i--;\n              parseAttribute(node, tag, name, value, isSVG, isCE, options);\n            }\n          }\n        }\n      }\n      options.path = tag;\n      options.first = false;\n      processChildren(node, options);\n      if (topDecl) {\n        options.decl[0] = options.hasCustomElement\n          ? `const ${tag} = r.untrack(() =\u003e document.importNode(tmpls[${templateId}].content.firstChild, true))`\n          : `const ${tag} = tmpls[${templateId}].content.firstChild.cloneNode(true)`;\n      }\n    } else if (node.type === \"text\") {\n      const tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n      options.path = tag;\n      options.first = false;\n    } else if (node.type === \"comment\") {\n      const tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n      if (node.content === \"#\") {\n        if (options.multi) {\n          options.exprs.push(`r.insert(${options.parent}, exprs[${options.counter++}], ${tag})`);\n        } else options.exprs.push(`r.insert(${options.parent}, exprs[${options.counter++}])`);\n      }\n      options.path = tag;\n      options.first = false;\n    }\n  }\n  function parseTemplate(nodes, funcBuilder) {\n    const options = {\n        path: \"\",\n        decl: [],\n        exprs: [],\n        delegatedEvents: new Set(),\n        counter: 0,\n        first: true,\n        multi: false,\n        templateId: 0,\n        templateNodes: []\n      },\n      id = uuid,\n      origNodes = nodes;\n    let toplevel;\n    if (nodes.length \u003e 1) {\n      nodes = [\n        {\n          type: \"fragment\",\n          children: nodes\n        }\n      ];\n    }\n    if (nodes[0].name === \"###\") {\n      toplevel = true;\n      processComponent(nodes[0], options);\n    } else parseNode(nodes[0], options);\n    r.delegateEvents(Array.from(options.delegatedEvents));\n    const templateNodes = [origNodes].concat(options.templateNodes);\n    return [\n      templateNodes.map(t =\u003e stringify(t)),\n      funcBuilder(\n        \"tmpls\",\n        \"exprs\",\n        \"r\",\n        options.decl.join(\",\\n\") +\n          \";\\n\" +\n          options.exprs.join(\";\\n\") +\n          (toplevel ? \"\" : `;\\nreturn _$el${id};\\n`)\n      )\n    ];\n  }\n  function html(statics, ...args) {\n    const templates =\n      cache.get(statics) ||\n      createTemplate(statics, {\n        funcBuilder: functionBuilder\n      });\n    return templates[0].create(templates, args, r);\n  }\n  return html;\n}\n\nconst html = createHTML({\n  effect,\n  style,\n  insert,\n  untrack,\n  spread,\n  createComponent,\n  delegateEvents,\n  classList,\n  mergeProps,\n  dynamicProperty,\n  setAttribute,\n  setAttributeNS,\n  addEventListener,\n  Aliases,\n  getPropAlias,\n  Properties,\n  ChildProperties,\n  DelegatedEvents,\n  SVGElements,\n  SVGNamespace\n});\n\nexport { html as default };\n"],"version":3}
